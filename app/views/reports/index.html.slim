- @title = 'Reportes'
-if @datos.empty?
  h1 = "No hay datos para mostrar"
-else
  .row
    .col-md-8
      .panel.panel-default.shadow
        .panel-heading
          .pull-left
            h3.panel-title.text-uppercase Graficos
          .pull-right
            = form_tag(reports_path , remote: true) do |f| 
              = select_tag "frecuencia", options_for_select([["5 minutos", 1], ["10 minutos", 2],["15 minutos", 3],["30 minutos", 4],["1 hora", 5],["12 hora", 6],["24 hora", 7],["7 dias", 8],["1 mes", 9]],["Todos",0])
            button.btn.btn-sm#refresh
              i.fa.fa-refresh
          .clearfix
        .panel-body
          .panel.panel-tab.panel-tab-double.shadow
            .panel-heading.no-padding
              ul.nav.nav-tabs
                li.nav-border.nav-border-top-danger.active
                  a.text-center aria-expanded="false" data-toggle="tab" href="#tab6-1"
                    | Perdida de paquetes
                li.nav-border.nav-border-top-primary
                  a.text-center aria-expanded="false" data-toggle="tab" href="#tab6-2"
                    | Latencia
                li.nav-border.nav-border-top-success
                  a.text-center aria-expanded="false" data-toggle="tab" href="#tab6-3"
                    | Jitter
                li.nav-border.nav-border-top-info
                  a.text-center aria-expanded="false" data-toggle="tab" href="#tab6-4"
                    | Nivel de senal
                li.nav-border.nav-border-top-info
                  a.text-center aria-expanded="false" data-toggle="tab" href="#tab6-5"
                    | Velocidad de enlace              
            .panel-body
              .tab-content
                #tab6-1.tab-pane.fade.active.in
                  canvas id="ping" width="400" height="200"
                  table.table#ping_table
                    thead
                      tr
                        th Id
                        th Valor
                        th SSID
                    tbody
                #tab6-2.tab-pane.fade
                  canvas id="latency" width="400" height="200"
                  table.table#latency_table
                    thead
                      tr
                        th Id
                        th Valor
                        th SSID
                    tbody
                #tab6-3.tab-pane.fade
                  canvas id="jitter" width="400" height="200"
                  table.table#jitter_table
                    thead
                      tr
                        th Id
                        th Valor
                        th SSID
                    tbody
                #tab6-4.tab-pane.fade
                  canvas id="sign_level" width="400" height="200"
                  table.table#sign_table
                    thead
                      tr
                        th Id
                        th Valor
                        th SSID
                    tbody
                #tab6-5.tab-pane.fade
                  canvas id="link_speed" width="400" height="200"
                  table.table#link_table
                    thead
                      tr
                        th Id
                        th Valor
                        th SSID
                    tbody

    .col-md-4
      .panel.panel-default.shadow
        .panel-heading
          h3.panel-title Rangos de referencia
        .panel-body
          table.table
            thead
              tr
                th
                th Minimo
                th Maximo
                th Medida
            tbody
              tr
                td Jitter
                th scope="row"  = Setting.min_jitter
                th scope="row"  = Setting.max_jitter
                th scope="row"  = "ms"
              tr
                td RTT
                th scope="row"  = Setting.min_ping
                th scope="row"  = Setting.max_ping
                th scope="row"  = "ms"
              tr
                td Latencia
                th scope="row"  = Setting.min_latency
                th scope="row"  = Setting.max_latency
                th scope="row"  = "ms"                             
              tr
                td Velocidad de enlace
                th scope="row"  = Setting.min_link_speed
                th scope="row"  = Setting.max_link_speed
                th scope="row"  = "Mb/s"                                
              tr
                td Nivel de senal
                th scope="row"  = Setting.min_sign_level
                th scope="row"  = Setting.max_sign_level                                                
                th scope="row"  = "dBm"
  javascript:
    var ping_label
    var latency_label
    var jitter_label
    var link_speed_label
    var sign_level_label

    var ping_data
    var latency_data
    var link_speed_data
    var sign_level_data
    var jitter_data

    var ping_list
    var latency_list
    var link_speed_list
    var sign_level_list
    var jitter_list

    var background_color = [
      'rgba(255, 99, 132, 0.2)',
      'rgba(54, 162, 235, 0.2)',
      'rgba(255, 206, 86, 0.2)',
      'rgba(75, 192, 192, 0.2)',
      'rgba(153, 102, 255, 0.2)',
      'rgba(255, 159, 64, 0.2)'
    ]

    var border_color = [
      'rgba(255, 99, 132, 1)',
      'rgba(54, 162, 235, 1)',
      'rgba(255, 206, 86, 1)',
      'rgba(75, 192, 192, 1)',
      'rgba(153, 102, 255, 1)',
      'rgba(255, 159, 64, 1)'
    ]

    var chart_options = {
      hover: {mode: null},
      legend: {
        display: false
      },
      scales: {
          yAxes: [{
              ticks: {
                  beginAtZero: true
              }
          }]
      }
    }

    var ctx_ping = document.getElementById('ping').getContext('2d');
    var pingChart = new Chart(ctx_ping, {
      type: 'bar',
      data: {
          labels: ping_label,
          datasets: [{
              data: ping_data,
              backgroundColor: background_color,
              borderColor: border_color,
              borderWidth: 1
          }]
      },
      options: {
        hover: {mode: null},
        legend: {
          display: false
        },
        tooltips: {
          enabled: true,
          mode: 'single',
          callbacks: {
              title: function (tooltipItem, data) { 
                  return "AP: " + data.labels[tooltipItem[0].index]; 
              },
              label: function(tooltipItems, data) {
                  return "Total: " + tooltipItems.yLabel + ' %';
              }
          }
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true,
                    step: 10,
                    max: 100
                }
            }]
        }
      }
    });

    var ctx_latency = document.getElementById('latency').getContext('2d');
    var latencyChart = new Chart(ctx_latency, {
      type: 'bar',
      data: {
          labels: latency_label,
          datasets: [{
              data: latency_data,
              backgroundColor: background_color,
              borderColor: border_color,
              borderWidth: 1
          }]
      },
      options: chart_options
    });

    var ctx_jitter = document.getElementById('jitter').getContext('2d');
    var jitterChart = new Chart(ctx_jitter, {
      type: 'bar',
      data: {
          labels: jitter_label,
          datasets: [{
              data: jitter_data,
              backgroundColor: background_color,
              borderColor: border_color,
              borderWidth: 1
          }]
      },
      options: chart_options
    });

    var ctx_link_speed = document.getElementById('link_speed').getContext('2d');
    var link_speedChart = new Chart(ctx_link_speed, {
      type: 'bar',
      data: {
          labels: link_speed_label,
          datasets: [{
              data: link_speed_data,
              backgroundColor: background_color,
              borderColor: border_color,
              borderWidth: 1
          }]
      },
      options: chart_options
    });

    var ctx_sign_level = document.getElementById('sign_level').getContext('2d');
    var sign_levelChart = new Chart(ctx_sign_level, {
      type: 'bar',
      data: {
          labels: sign_level_label,
          datasets: [{
              data: sign_level_data,
              backgroundColor: background_color,
              borderColor: border_color,
              borderWidth: 1
          }]
      },
      options: chart_options
    });

    $(document).ready(function(){
      get_data();
      $("#frecuencia").change(function(){
        get_data();
      })

      $("#refresh").click(function(){
        get_data();
      })

      function clear_charts(){
        ping_label = []
        latency_label = []
        jitter_label = []
        link_speed_label = []
        sign_level_label = []
        ping_data = []
        latency_data = []
        link_speed_data = []
        sign_level_data = []
        jitter_data = []
      }

      function update_charts(){
        pingChart.data.labels = ping_label
        pingChart.data.datasets[0].data = ping_data
        pingChart.update();
        latencyChart.data.labels = latency_label
        latencyChart.data.datasets[0].data = latency_data
        latencyChart.update();
        jitterChart.data.labels = jitter_label
        jitterChart.data.datasets[0].data = jitter_data
        jitterChart.update();
        link_speedChart.data.labels = link_speed_label
        link_speedChart.data.datasets[0].data = link_speed_data
        link_speedChart.update();
        sign_levelChart.data.labels = sign_level_label
        sign_levelChart.data.datasets[0].data = sign_level_data
        sign_levelChart.update();
      }

      function get_data(){
        $.ajax({
          type: "GET",
          data: {
            desde: $("#frecuencia option:selected").val()
          },
          url:  "#{reports_path(format: :json)}",
          success: function(data, textStatus, jqXHR){
            clear_charts()
            update_charts()
            ping_label = $.map(data["ping"], function(record){
              return record[0]
            })
            ping_data = $.map(data["ping"], function(record){
              return record[1]
            })
            $("#ping_table tbody").empty();
            $.map(data["ping"], function(record){
              $.map(record[3], function(id, value){
                $("#ping_table tbody").append('<tr>'+
                  '<td>' + id[0] + '</td>' +
                  '<td>' + id[1] + '</td>' +
                  '<td>' + id[2] + '</td>' +
                '</tr>')
              });
            })
            pingChart.data.labels = ping_label
            pingChart.data.datasets[0].data = ping_data
            pingChart.update();

            latency_label = $.map(data["latency"], function(record){
              return record[0]
            })
            latency_data = $.map(data["latency"], function(record){
              return record[1]
            })
            $("#latency_table tbody").empty();
            $.map(data["latency"], function(record){
              $.map(record[3], function(id, value){
                $("#latency_table tbody").append('<tr>'+
                  '<td>' + id[0] + '</td>' +
                  '<td>' + id[1] + '</td>' +
                  '<td>' + id[2] + '</td>' +
                '</tr>')
              });
            })
            latencyChart.data.labels = latency_label
            latencyChart.data.datasets[0].data = latency_data
            latencyChart.update();

            jitter_label = $.map(data["jitter"], function(record){
              return record[0]
            })
            jitter_data = $.map(data["jitter"], function(record){
              return record[1]
            })
            $("#jitter_table tbody").empty();
            $.map(data["jitter"], function(record){
              $.map(record[3], function(id, value){
                $("#jitter_table tbody").append('<tr>'+
                  '<td>' + id[0] + '</td>' +
                  '<td>' + id[1] + '</td>' +
                  '<td>' + id[2] + '</td>' +
                '</tr>')
              });
            })            
            jitterChart.data.labels = jitter_label
            jitterChart.data.datasets[0].data = jitter_data
            jitterChart.update();

            link_speed_label = $.map(data["link_speed"], function(record){
              return record[0]
            })
            link_speed_data = $.map(data["link_speed"], function(record){
              return record[1]
            })
            $("#link_table tbody").empty();
            $.map(data["link_speed"], function(record){
              $.map(record[3], function(id, value){
                $("#link_table tbody").append('<tr>'+
                  '<td>' + id[0] + '</td>' +
                  '<td>' + id[1] + '</td>' +
                  '<td>' + id[2] + '</td>' +
                '</tr>')
              });
            })   
            link_speedChart.data.labels = link_speed_label
            link_speedChart.data.datasets[0].data = link_speed_data
            link_speedChart.update();

            sign_level_label = $.map(data["sign_level"], function(record){
              return record[0]
            })
            sign_level_data = $.map(data["sign_level"], function(record){
              return record[1]
            })
            $("#sign_table tbody").empty();
            $.map(data["sign_level"], function(record){
              $.map(record[3], function(id, value){
                $("#sign_table tbody").append('<tr>'+
                  '<td>' + id[0] + '</td>' +
                  '<td>' + id[1] + '</td>' +
                  '<td>' + id[2] + '</td>' +
                '</tr>')
              });
            })   
            sign_levelChart.data.labels = sign_level_label
            sign_levelChart.data.datasets[0].data = sign_level_data
            sign_levelChart.update();
          },
          error: function(jqXHR, textStatus, errorThrown){
            console.log("Error al recibir los datos: " + textStatus);
          }
        });
      }
    });
