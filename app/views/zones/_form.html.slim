.row
  = form_for(@zone, html: {class: "form-horizontal form-bordered"}) do |f|
    .col-sm-6
      .form-group
        = f.label :name, class: "col-sm-2 control-label", style: "text-align: left"
        .col-sm-8
          = f.text_field :name, class: "form-control"
      .form-group
        = f.label :Descripci√≥n, class: "col-sm-2 control-label", style: "text-align: left"
        .col-sm-8
          = f.text_area :description, class: "form-control"
      .form-group
        .pull-right
          = link_to fa_icon('history'), '#' ,class: "btn btn-default mr-5", id: 'remove'
          = link_to fa_icon('minus'), '#' ,class: "btn btn-default mr-5", id: 'clear'
          = link_to "Cancelar", :back ,class: "btn btn-danger mr-5"
          = f.submit "Guardar", class: "btn btn-success mr-5", id: "enviar"
    .col-sm-6
      #zone_map style=("width: 100%; height: 400px;")
javascript:
  var points = #{ @zone.coordinates.map { |c| [c.latitude.to_f, c.longitude.to_f] } || [] }
  var area = []
  var zone = []
  var limits = #{ Setting.limits.map { |lat, lng| [lat.to_f, lng.to_f] } }
  var map = new GMaps({
    el: '#zone_map',
    lat:  #{Setting.center[0]},
    lng:  #{Setting.center[1]},
  });

  $('#enviar').click(function(e){
    e.preventDefault();

    $.ajax({
      type: 'POST',
      url: '#{api_data_zone_save_limits_path}',
      data: {
        points: points,
        id: #{params[:id]}
      },
      success: function(data, textStatus, jqXHR){
      },
      error: function(jqXHR, textStatus, errorThrown){
        console.log("no guardo");
      }
    });

    $('form').submit();
  })

  $('#remove').click(function(e){
    e.preventDefault()
    map.removeMarkers();
    points.splice(-1,1);
    for(var n = 0; n <= points.length; n++){
      markMap(points[n][0],points[n][1])
    }
  });

  $('#clear').click(function(e){
    e.preventDefault();
    points = []
    map.removeMarkers();
    map.removePolygons();
    paintArea()
  })

  $(document).ready(function(){
    paintArea()
    paintMap()
  })

  function markMap(lat, lng){
    map.addMarker({
      lat: lat,
      lng: lng,
      fences: [limits],
      outside: function(){
        alert('El punto esta fuera del marco')
      }
    });
    paintArea()
    paintMap()
  }

  function paintArea(){
    map.removePolygons();
    area = map.drawPolygon({
      paths: limits,
      strokeColor: 'red'
    });

    area.addListener('click', function(e){
      points.push([e.latLng.lat(),e.latLng.lng()])
      markMap(e.latLng.lat(),e.latLng.lng());
    })
  }

  function paintMap(){
    zone = map.drawPolygon({
      paths: points,
      strokeColor: 'blue'
    });
  }
